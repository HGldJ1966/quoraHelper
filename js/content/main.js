// Generated by CoffeeScript 1.10.0
(function() {
  var KEY, SELECTOR, diveInto, getCurrentViewIndex, getHeaderHeight, jump, jumping, triggerMouseEvent;

  SELECTOR = {
    header: '.SiteHeader',
    viewItem: '.TopicFaqQuestionCard, .layout_3col_center .pagedlist_item, .layout_2col_main .pagedlist_item, .feed .pagedlist_item',
    answer: '.WriteAnswer',
    more: '.more_link',
    comment: '.view_comments',
    topicHeader: '.PinnedTopicHeader.fixable_fixed'
  };

  KEY = {
    j: 74,
    k: 75,
    enter: 13,
    esc: 27
  };

  jumping = false;

  triggerMouseEvent = function(node, eventType) {
    var clickEvent;
    clickEvent = document.createEvent('MouseEvents');
    clickEvent.initEvent(eventType, true, true);
    return node.dispatchEvent(clickEvent);
  };

  getHeaderHeight = function() {
    return $(SELECTOR.header).outerHeight() + $(SELECTOR.topicHeader).outerHeight();
  };

  getCurrentViewIndex = function() {
    var $header, $views, currentIndex, headerBottom;
    $header = $(SELECTOR.header);
    headerBottom = $header.offset().top + getHeaderHeight();
    $views = $(SELECTOR.viewItem);
    currentIndex = null;
    $views.each(function(index) {
      var itemOffset;
      if (this.scrollHeight === 0) {
        return;
      }
      itemOffset = $(this).offset();
      if (Math.abs(itemOffset.top - headerBottom) < 3) {
        currentIndex = index;
        return false;
      } else if (itemOffset.top >= (headerBottom + 3)) {
        currentIndex = index - 1;
        return false;
      }
    });
    if (currentIndex === null) {
      currentIndex = $views.length - 1;
    }
    return currentIndex;
  };

  jump = function(direction) {
    var $target, $views, currentIndex, posTop;
    if (jumping) {
      return;
    }
    $views = $(SELECTOR.viewItem);
    currentIndex = getCurrentViewIndex();
    posTop = null;
    if (direction === 'forward') {
      $target = $views.eq(currentIndex + 1);
    } else {
      if (currentIndex > 0) {
        $target = $views.eq(currentIndex - 1);
      } else if (currentIndex === 0) {
        posTop = 0;
      }
    }
    if ($target != null ? $target.offset() : void 0) {
      posTop = $target.offset().top - getHeaderHeight();
    }
    if (posTop != null) {
      jumping = true;
      return $('html, body').animate({
        scrollTop: posTop
      }, {
        duration: 'fast',
        complete: function() {
          return jumping = false;
        }
      });
    }
  };

  diveInto = function() {
    var $target, $view, currentIndex;
    currentIndex = getCurrentViewIndex();
    if (currentIndex < 0) {
      currentIndex = 0;
    }
    $view = $(SELECTOR.viewItem).eq(currentIndex);
    $target = $(SELECTOR.more, $view);
    if (!$target.is(':visible')) {
      $target = $(SELECTOR.comment, $view);
    }
    if (!$target.is(':visible')) {
      $target = $(SELECTOR.answer, $view);
    }
    if ($target.length && !$target.data('dived')) {
      triggerMouseEvent($target[0], 'click');
      triggerMouseEvent($target[0], 'mouseover');
      triggerMouseEvent($target[0], 'mouseup');
      $target.data('dived', true);
    }
  };

  $('html').keydown(function(evt) {
    var ref;
    if ($(evt.target).is('input')) {
      return;
    }
    if (((ref = evt.target.className) != null ? ref.indexOf('editor') : void 0) >= 0) {
      return;
    }
    if (evt.keyCode === KEY.j) {
      jump('forward');
    } else if (evt.keyCode === KEY.k) {
      jump('backward');
    } else if (evt.keyCode === KEY.enter) {
      diveInto();
    }
  });

}).call(this);
